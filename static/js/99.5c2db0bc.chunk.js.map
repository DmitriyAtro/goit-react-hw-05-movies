{"version":3,"file":"static/js/99.5c2db0bc.chunk.js","mappings":"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","sources":["Page/MovieDetails/MovieDetails.styled.js","Page/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 100%;\n  padding: 15px 0;\n`;\nexport const Box = styled.div`\n  display: flex;\n  padding: 10px 0;\n`;\nexport const Btn = styled.button`\n  border: none;\n  width: 300px;\n  padding: 0 5px;\n  cursor: pointer;\n  font-family: 'Roboto Slab', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  border-radius: 4px;\n  color: #ffffff;\n  background-color: #081c4b;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #044813;\n  }\n`;\nexport const CardFilm = styled.img`\n  display: block;\n  margin-right: 10px;\n  width: 300px;\n`;\nexport const TitleMovie = styled.h1`\n  margin: 0;\n  font-size: 30px;\n  color: #081c4b;\n`;\n\nexport const BoxBtn = styled.ul`\n  margin: 0;\n  padding-left: 0;\n  list-style: none;\n  font-size: 25px;\n  display: flex;\n  align-items: center;\n  li {\n    margin-right: 10px;\n  }\n`;\n\nexport const BtnInfo = styled.button`\n  border: none;\n  width: 140px;\n  height: 40px;\n  padding: 0 5px;\n  font-family: 'Roboto Slab', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.88;\n  letter-spacing: 0.06em;\n  border-radius: 4px;\n  color: #ffffff;\n  background-color: #081c4b;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #044813;\n  }\n`;\nexport const MovieDescr = styled.h2`\n  font-size: 22px;\n  margin: 50px 0 10px 0;\n`;\nexport const MovieInfo = styled.h2`\n  width: 400px;\n  font-size: 15px;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { AiFillBackward } from 'react-icons/ai';\nimport { ToastContainer, toast } from 'react-toastify';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport {\n  Btn,\n  Container,\n  Box,\n  CardFilm,\n  TitleMovie,\n  BoxBtn,\n  BtnInfo,\n  MovieDescr,\n  MovieInfo,\n} from './MovieDetails.styled';\nimport NotFaund from 'Page/NotFaund';\n\nconst MovieDetails = () => {\n  const [currentFilm, setCurrentFilm] = useState('');\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backClick = location?.state?.from || '/';\n  const onGoBack = () => navigate(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=8d99b39cb91a8ab8040b3ee85cb6e931&language=en-US`\n      )\n      .then(response => response.data)\n      .then(data => {\n        if (data === '') {\n          return;\n        } else {\n          const {\n            poster_path,\n            title,\n            release_date,\n            vote_average,\n            genres,\n            overview,\n          } = data;\n          return setCurrentFilm({\n            img: `https://image.tmdb.org/t/p/w500/${poster_path}`,\n            title: title,\n            genres: genres.map(genre => (\n              <span style={{ marginRight: '5px' }} key={genre.name}>\n                {genre.name}\n              </span>\n            )),\n            overview: overview,\n            score: Math.round(vote_average * 10),\n            date: new Date(Date.parse(release_date)).getFullYear(),\n          });\n        }\n      })\n      .catch(error => {\n        toast.error(`${error.message}`);\n      });\n  }, [movieId]);\n\n  const { img, title, genres, overview, score, date } = currentFilm;\n\n  return (\n    <>\n      {' '}\n      {currentFilm ? (\n        <Container>\n          <Btn type=\"button\" onClick={onGoBack}>\n            <AiFillBackward\n              style={{ marginRight: '5px' }}\n              size={16}\n            ></AiFillBackward>\n            Go back\n          </Btn>\n\n          <Box>\n            <CardFilm src={img} alt={title} />\n            <div>\n              <TitleMovie>\n                {title} ({date})\n              </TitleMovie>\n              <MovieDescr>User Score {`${score}%`}</MovieDescr>\n              <MovieDescr>Overview</MovieDescr>\n              <MovieInfo>{overview}</MovieInfo>\n              <MovieDescr>Genres</MovieDescr>\n              <MovieInfo>{genres}</MovieInfo>\n            </div>\n          </Box>\n          <h2>Additional information</h2>\n          <BoxBtn>\n            <li>\n              <BtnInfo type=\"button\">\n                <Link\n                  to=\"cast\"\n                  state={{ from: backClick }}\n                  style={{\n                    color: '#fff',\n                    textDecoration: 'none',\n                    padding: '5px 50px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  Cast\n                </Link>\n              </BtnInfo>\n            </li>\n            <li>\n              <BtnInfo type=\"button\">\n                <Link\n                  to=\"reviews\"\n                  state={{ from: backClick }}\n                  style={{\n                    color: '#fff',\n                    textDecoration: 'none',\n                    padding: '5px 40px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  Reviews\n                </Link>\n              </BtnInfo>\n            </li>\n          </BoxBtn>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n          <ToastContainer autoClose={2000} />\n        </Container>\n      ) : (\n        <NotFaund />\n      )}\n    </>\n  );\n};\nMovieDetails.propTypes = {\n  currentFilm: PropTypes.arrayOf(\n    PropTypes.shape({\n      img: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n      genres: PropTypes.string.isRequired,\n      overview: PropTypes.string.isRequired,\n      score: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default MovieDetails;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Box","_templateObject2","Btn","_templateObject3","CardFilm","_templateObject4","TitleMovie","_templateObject5","BoxBtn","_templateObject6","BtnInfo","_templateObject7","MovieDescr","_templateObject8","MovieInfo","_templateObject9","_location$state","_useState","useState","_useState2","_slicedToArray","currentFilm","setCurrentFilm","movieId","useParams","location","useLocation","navigate","useNavigate","backClick","state","from","useEffect","axios","concat","then","response","data","poster_path","title","release_date","vote_average","genres","overview","img","map","genre","_jsx","style","marginRight","children","name","score","Math","round","date","Date","parse","getFullYear","catch","error","toast","message","_jsxs","_Fragment","type","onClick","_location$state$from","_location$state2","AiFillBackward","size","src","alt","Link","to","color","textDecoration","padding","cursor","Suspense","Outlet","ToastContainer","autoClose","NotFaund"],"sourceRoot":""}